     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; a-(7+x)/(b*b-c/d+2); a-doubleword; b,c,d-byte; x-qword
    14                                      ;signed
    15 00000000 0F000000                    a dd 15
    16 00000004 03                          b db 3
    17 00000005 04                          c db 4
    18 00000006 02                          d db 2
    19 00000007 0B00000000000000            x dq 11
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 A0[04000000]                    mov al, [b]
    25 00000005 8A25[04000000]                  mov ah, [b]
    26 0000000B F6EC                            imul ah
    27 0000000D 6689C3                          mov bx, ax
    28 00000010 A0[05000000]                    mov al, [c]
    29 00000015 F63D[06000000]                  idiv byte [d]
    30 0000001B 6698                            cbw
    31 0000001D 6619C3                          sbb bx, ax
    32 00000020 6683D302                        adc bx, 2
    33 00000024 6689D8                          mov ax, bx
    34 00000027 6699                            cwd
    35 00000029 99                              cdq
    36 0000002A 89C3                            mov ebx, eax
    37 0000002C 89D1                            mov ecx, edx
    38                                          
    39 0000002E 66B80700                        mov ax, 7
    40 00000032 6699                            cwd
    41 00000034 99                              cdq
    42 00000035 0305[07000000]                  add eax, dword [x]
    43 0000003B 1315[0B000000]                  adc edx, dword [x+4]
    44 00000041 F7FB                            idiv dword ebx
    45 00000043 89C3                            mov ebx, eax
    46 00000045 89D1                            mov ecx, edx
    47                                          
    48 00000047 A1[00000000]                    mov eax, [a]
    49 0000004C 99                              cdq
    50 0000004D 19D8                            sbb eax, ebx
    51 0000004F 19CA                            sbb edx, ecx
    52                                          
    53                                          
    54                                          
    55                                      
    56                                          ; exit(0)
    57 00000051 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    58 00000053 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
